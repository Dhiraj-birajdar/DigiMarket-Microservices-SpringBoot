services:
  # Database server
  database:
    container_name: mysql-container
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: digimarket
    #      MYSQL_USER: root
    #      MYSQL_PASSWORD: root
    volumes:
      - mysql-vol:/var/lib/mysql
    ports:
      - 3306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - digimarket-network
    restart: unless-stopped

  # MailDev mail server  // todo user docker:maildev/maildev mail server if live mail server not set up
  mail-dev:
    container_name: mail-dev-container
    image: maildev/maildev
    ports:
      - 8088:1080
      - 25:1025
    networks:
      - digimarket-network

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - digimarket-network

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=dhiraj
    #   - MONGO_INITDB_ROOT_PASSWORD=dhiraj

    # mongo-express:
    #   image: mongo-express
    #   container_name: mongo_express
    #   restart: always
    #   ports:
    #     - 8081:8081
    #   environment:
    #     - ME_CONFIG_MONGODB_ADMINUSERNAME=dhiraj
    #     - ME_CONFIG_MONGODB_ADMINPASSWORD=dhiraj
    #     - ME_CONFIG_MONGODB_SERVER=mongodb
    # run apache/kafka image directly from docker
    # kafka:
    #   image: confluentinc/cp-kafka:latest
    #   ports:
    #     - "9092:9092"
    #   environment:
    #     KAFKA_PROCESS_ROLES: broker,controller
    #     KAFKA_NODE_ID: 1
    #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9092
    #     KAFKA_LISTENERS: PLAINTEXT://localhost:9092
    #     KAFKA_LOG_DIRS: /var/lib/kafka/data
    #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    #     KAFKA_MIN_INSYNC_REPLICAS: 1
    #   networks:
    #     - digimarket-network


    # keycloak Optional
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:25.0.1
    ports:
      - 9090:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - digimarket-network
    command:
      - "start-dev"

networks:
  digimarket-network:
    driver: bridge

volumes:
  mysql-vol:
  mongo:
